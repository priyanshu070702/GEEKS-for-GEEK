class Solution
{
  public:
    //Function to find maximum of each subarray of size k.
    vector <int> max_of_subarrays(int *A, int n, int k)
    {
        // your code here
        //o(n^2)
        int m=0,j=0,i=0;
        vector<int>v;
        while(i<n && k<=n){
            while(j<k){
                m=max(A[j],m);
                j++;
            }
            v.push_back(m);
            i++;
            j=i;
            k++;
            m=0;
        }
        
        return v;
        
        //o(n)
         deque<int> dq;

        vector<int> ans;

        for(int i=0;i<n;i++)

        {

            if(!dq.empty() && dq.front()==i-k)

            {

                dq.pop_front();

            }

            while(!dq.empty() && A[dq.back()]<A[i])

            {

                dq.pop_back();

            }

            dq.push_back(i);

            if(i>=k-1)

            {

                ans.push_back(A[dq.front()]);

            }

        }

        return ans;
    }
};

link-https://practice.geeksforgeeks.org/problems/maximum-of-all-subarrays-of-size-k3101/1?page=2&company[]=Amazon&sortBy=submissions
